{"version":3,"sources":["components/three/VanityBox.js","components/three/lights.js","components/test.js","App.js","reportWebVitals.js","index.js"],"names":["Model","props","group","useRef","useGLTF","nodes","materials","ref","dispose","geometry","Cube","material","Material","scale","position","rotation","Math","PI","preload","Lights","intensity","Test","OrbitControls","fallback","App","className","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAOe,SAASA,EAAMC,GAC5B,IAAMC,EAAQC,mBADqB,EAENC,YAAQ,0BAA7BC,EAF2B,EAE3BA,MAAOC,EAFoB,EAEpBA,UACf,OACE,gDAAOC,IAAKL,GAAWD,GAAvB,IAA8BO,QAAS,KAAvC,UACE,sBACEC,SAAUJ,EAAMK,KAAKD,SACrBE,SAAUL,EAAUM,SACpBC,MAAO,CAAC,EAAG,EAAG,KAEhB,sBACEJ,SAAUJ,EAAM,yCAAyCI,SACzDE,SAAUN,EAAM,yCAAyCM,SACzDG,SAAU,CAAC,KAAM,IAAM,KACvBC,SAAU,CAACC,KAAKC,GAAK,EAAG,GAAID,KAAKC,GAAK,GACtCJ,MAAO,EAAE,MAAO,MAAO,QAEzB,sBACEJ,SAAUJ,EAAM,yCAAyCI,SACzDE,SAAUN,EAAM,yCAAyCM,SACzDG,SAAU,CAAC,EAAG,KAAO,MACrBC,SAAU,CAACC,KAAKC,GAAK,EAAG,EAAG,GAC3BJ,MAAO,EAAE,MAAO,MAAO,QAEzB,sBACEJ,SAAUJ,EAAM,yCAAyCI,SACzDE,SAAUL,EAAU,4CACpBQ,SAAU,EAAE,KAAM,GAAI,KACtBC,SAAU,CAACC,KAAKC,GAAK,EAAG,GAAID,KAAKC,GAAK,GACtCJ,MAAO,EAAE,MAAO,MAAO,QAEzB,sBACEJ,SAAUJ,EAAM,yCAAyCI,SACzDE,SAAUN,EAAM,yCAAyCM,SACzDG,SAAU,CAAC,IAAM,EAAG,MACpBC,SAAU,CAACC,KAAKC,GAAK,EAAG,GAAI,MAC5BJ,MAAO,EAAE,MAAO,MAAO,YAM/BT,IAAQc,QAAQ,0BC/ChB,IASeC,EATA,WAEX,OACI,mCACI,8BAAcC,UAAW,QCoBtBC,MApBf,WAOI,OACI,eAAC,IAAD,WAEI,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,IACA,cAAC,WAAD,CAAUC,SAAU,KAApB,SACI,cAACvB,EAAD,UCCDwB,MAdf,WACE,OAEE,sBAAKC,UAAU,MAAf,UACE,sDACA,kEACA,yDACA,qBAAKC,GAAG,UAAR,SACE,cAAC,EAAD,UCFOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dcf0993e.chunk.js","sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function Model(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('../../../VanityBox.glb')\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <mesh \n        geometry={nodes.Cube.geometry}\n        material={materials.Material} \n        scale={[1, 2, 1]}\n      />\n      <mesh\n        geometry={nodes['Screen_Shot_2021-03-04_at_63417_PM001'].geometry}\n        material={nodes['Screen_Shot_2021-03-04_at_63417_PM001'].material}\n        position={[1.01, 0.01, 0.01]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n        scale={[-2.47, -2.47, -3.63]}\n      />\n      <mesh\n        geometry={nodes['Screen_Shot_2021-03-04_at_63417_PM002'].geometry}\n        material={nodes['Screen_Shot_2021-03-04_at_63417_PM002'].material}\n        position={[0, 0.02, -1.02]}\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={[-2.47, -2.47, -3.63]}\n      />\n      <mesh\n        geometry={nodes['Screen_Shot_2021-03-04_at_63417_PM003'].geometry}\n        material={materials['Screen Shot 2021-03-04 at 6.34.17 PM.001']}\n        position={[-1.02, 0, -0.01]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n        scale={[-2.47, -2.47, -3.63]}\n      />\n      <mesh\n        geometry={nodes['Screen_Shot_2021-03-04_at_63417_PM004'].geometry}\n        material={nodes['Screen_Shot_2021-03-04_at_63417_PM004'].material}\n        position={[0.01, 0, 1.01]}\n        rotation={[Math.PI / 2, 0, -3.13]}\n        scale={[-2.47, -2.47, -3.63]}\n      />\n    </group>\n  )\n}\n\nuseGLTF.preload('../../../VanityBox.glb')\n","import React from 'react'\n\nconst Lights = () => {\n\n    return(\n        <>\n            <ambientLight intensity={.4}/>\n        </>\n    )\n}\n\nexport default Lights","import React, { Component, Suspense } from \"react\";\nimport { Canvas } from '@react-three/fiber'\nimport { OrbitControls } from \"@react-three/drei\";\nimport Model from './three/VanityBox';\nimport Lights from './three/lights';\n\nfunction Test(){\n\n\n/*const geometry = new THREE.BoxGeometry( 1, 1, 1 );\nconst material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );\nconst mesh = new THREE.Mesh( geometry, material );\nscene.add( mesh );*/\n    return(\n        <Canvas>\n\n            <OrbitControls/>\n            <Lights/>\n            <Suspense fallback={null}>\n                <Model/>\n            </Suspense>\n\n        </Canvas>\n    );   \n}\n\nexport default Test;\n\n\n/*\n<mesh>\n    <boxBufferGeometry attach='geometry' args={[1,1,1]}/>\n     <meshStandardMaterial attach='material'/>\n/mesh>\n            */","import './App.css';\nimport React, { Component } from \"react\";\nimport Test from './components/test'\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\n\nfunction App() {\n  return (\n    \n    <div className=\"App\">\n      <h1>Me Gusta Tu Eyeliner</h1>\n      <p>Click and drag the square to move</p>\n      <p>Pinch in and out to zoom</p>\n      <div id=\"exhibit\">\n        <Test/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}